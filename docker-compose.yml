version: '3.8'

services:
  jenkins:
    build: ./jenkins
    ports:
      - "18080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: transport_db
    volumes:
      - ./data-warehouse/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d transport_db" ]
      interval: 5s
      timeout: 5s
      retries: 10

  data-generator:
    build: ./data-generator
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        # Adicionado: Garante que o banco esteja pronto antes de gerar dados
        condition: service_healthy
    restart: on-failure

  r-processing:
    build: ./r-processing
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        # Mantido: R pode precisar do banco
        condition: service_healthy
      data-generator:
        # Modificado: Garante que R rode APÓS a geração de dados
        condition: service_completed_successfully
    restart: on-failure

  data-warehouse:
    build: ./data-warehouse
    volumes:
      - ./data:/app/data
      - ./data-warehouse/datalake:/app/datalake
    depends_on:
      r-processing:
        condition: service_completed_successfully
    restart: on-failure

  spark-master:
    image: bitnami/spark:3.4
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark-processing:/app
      - ./data:/data
    environment:
      SPARK_MODE: master
    depends_on:
      r-processing:
        condition: service_completed_successfully
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:3.4
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: "spark://spark-master:7077"
    volumes:
      - ./spark-processing:/app
      - ./data:/data
    restart: unless-stopped

  web-dashboard:
    build: ./web-dashboard
    ports:
      - "5000:5000"
    depends_on:
      data-warehouse:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  jenkins_data:
  postgres_data:
